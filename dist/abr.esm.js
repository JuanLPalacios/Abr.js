class t{constructor(t){this.dataView=new DataView(t),this.offset=0}readRawData(t,n){for(;t.length>0;)t.pop();const r=this.offset,e=this.offset+n;for(;!this.atEnd()&&this.offset<e;)t.push(this.getUint8());return this.offset-r}data(){return this.dataView.buffer}getPos(){return this.offset}setPos(t){this.offset=t}size(){return this.dataView.byteLength}atEnd(){return this.offset>=this.dataView.byteLength}getUint8(){const t=this.offset;return this.offset+=1,this.dataView.getUint8(t)}getUint16(){const t=this.offset;return this.offset+=2,this.dataView.getUint16(t)}getUint32(){const t=this.offset;return this.offset+=4,this.dataView.getUint32(t)}getInt16(){const t=this.offset;return this.offset+=2,this.dataView.getInt16(t)}getChar(){return String.fromCharCode(this.getUint8())}}var n=function(t,n,r,e){return new(r||(r=Promise))((function(o,i){function s(t){try{u(e.next(t))}catch(t){i(t)}}function c(t){try{u(e.throw(t))}catch(t){i(t)}}function u(t){var n;t.done?o(t.value):(n=t.value,n instanceof r?n:new r((function(t){t(n)}))).then(s,c)}u((e=e.apply(t,n||[])).next())}))};const r=65535,e=document.createElement("canvas"),o={map:{},get(t){return this.map[t]},set(t,n){this.map[t]=n},clear(){this.map={}},list(){return Object.values(this.map)}};function i(t){return{brushType:2,brushTipImage:e,md5Sum:new ArrayBuffer(0),name:t,valid:!1,spacing:1,antiAliasing:!0}}function s(t){return n(this,void 0,void 0,(function*(){return c(yield new Promise(((n,r)=>{const e=new FileReader;e.onload=function(t){t.target&&t.target.result&&"string"!=typeof t.target.result?n(t.target.result):r()},e.readAsArrayBuffer(t)})),t.name)}))}function c(r,e){return n(this,void 0,void 0,(function*(){const n=new t(r);try{const t=u(n);if(!a(t))throw new Error(`ERROR: unable to decode abr format version ${t.version}(subver ${t.subversion})`);if(0==t.count)throw new Error(`ERROR: no brushes found in ${e}`);const r=123456;for(let o=0;o<t.count;o++){-1==(yield l(n,t,e,r,o+1))&&console.warn(`Warning: problem loading brush #${o} in ${e}`)}const i=o.list();return o.clear(),i}catch(t){throw console.error(t),new Error(`Error: cannot parse ABR file: ${e}`)}}))}const u=t=>{const n={count:0,subversion:0,version:0};switch(n.version=t.getUint16(),n.subversion=0,n.count=0,n.version){case 1:case 2:n.count=t.getUint16();break;case 6:n.subversion=t.getUint16(),n.count=function(t,n){let r,e;if(!a(n))return 0;const o=t.getPos();try{f(t,"samp")}catch(n){return t.setPos(o),0}const i=t.getUint32(),s=i+t.getPos();if(s<0||s>t.size())return 0;const c=t.getPos();let u=0;for(;!t.atEnd()&&t.getPos()<s;){for(r=t.getUint32(),e=r;e%4!=0;)e++;const n=t.getPos()+e;if(!(n>0&&n<t.size()))return 0;t.setPos(n),u++}return t.setPos(c),u}(t,n)}return n};function a(t){switch(t.version){case 1:case 2:return!0;case 6:if(1==t.subversion||2==t.subversion)return!0}return!1}function f(t,n){let r=0;for(;!t.atEnd();){const e=[],o=[];let i;if(i=t.readRawData(e,4),4!=i)throw new Error("Error: Cannot read 8BIM tag ");if(h(e,"8BIM",4))throw new Error(`Error: Start tag not 8BIM but ${String.fromCharCode(...e)} at position ${t.getPos()}`);if(i=t.readRawData(o,4),4!=i)throw new Error("Error: Cannot read 8BIM tag name");if(String.fromCharCode(...o)==n)return;r=t.getUint32(),t.setPos(t.getPos()+r)}}function h(t,n,r){if(t.length<r||n.length<r)return!0;for(let e=0;e<r;e++)if(n.charCodeAt(e)!==t[e])return!0;return!1}function l(e,s,c,u,a){return n(this,void 0,void 0,(function*(){let u=-1;switch(s.version){case 1:case 2:u=yield function(r,e,s,c,u){return n(this,void 0,void 0,(function*(){let n="",c=-1;const a=r.getUint16(),f=r.getUint32(),h=r.getPos()+f;if(1==a){r.setPos(r.getPos()+4);const t=r.getUint16(),e=r.getUint16(),i=r.getUint16(),f=r.getInt16(),l=r.getUint16();n=d(s,u),o.set(n,{brushType:a,spacing:t,diameter:e,roundness:i,angle:f,hardness:l,name:n}),r.setPos(h),c=1}else if(2==a){r.setPos(r.getPos()+4);const a=r.getUint16();2==e.version&&(n=function(t){let n;const r=t.getUint32();if(0==r)return"";const e=r,o=[];for(n=0;n<e;n++)o[n]=t.getUint16();return String.fromCharCode(...o)}(r)),null===n&&(n=d(s,u));const f=!!r.getUint8();r.setPos(r.getPos()+8);const l=r.getUint32(),g=r.getUint32(),m=r.getUint32(),p=r.getUint32(),v=r.getUint16(),O=r.getUint8(),y=p-g,j=m-l,E=y*(v>>3)*j;if(j>16384)console.warn("WARNING: wide brushes not supported"),r.setPos(h);else{const e=[];let s;O?b(r,e,j):r.readRawData(e,E);const u=w(e,y,j);if(Object.keys(o.map).includes(n))s=i(n);else{s=i(n);const r=new t(new ArrayBuffer(0));s=Object.assign(Object.assign({},s),{md5Sum:yield crypto.subtle.digest("SHA-256",r.data())})}s=Object.assign(Object.assign({},s),{brushTipImage:u}),s=Object.assign(Object.assign({},s),{valid:!0}),s=Object.assign(Object.assign({},s),{name:n,spacing:a,antiAliasing:f}),o.set(n,s),c=1}}else console.warn("Unknown ABR brush type, skipping."),r.setPos(h);return c}))}(e,s,c,0,a);break;case 6:u=yield function(e,s,c,u,a){return n(this,void 0,void 0,(function*(){let n=0,u=0,f=-1;for(n=e.getUint32(),u=n;u%4!=0;)u++;const h=e.getPos()+u;e.setPos(e.getPos()+37),1==s.subversion?e.setPos(e.getPos()+10):e.setPos(e.getPos()+264);const l=e.getUint32(),g=e.getUint32(),m=e.getUint32(),p=e.getUint32(),v=e.getUint16(),O=e.getUint8(),y=p-g,j=m-l,E=y*(v>>3)*j,A=d(c,a),R=[];if(O?b(e,R,j):e.readRawData(R,E),y<r&&j<r){let n;const r=w(R,y,j);if(Object.keys(o.map).includes(A))n=i(A);else{n=i(A);const r=new t(new ArrayBuffer(0));n=Object.assign(Object.assign({},n),{md5Sum:yield crypto.subtle.digest("SHA-256",r.data())})}n=Object.assign(Object.assign({},n),{brushTipImage:r}),n=Object.assign(Object.assign({},n),{valid:!0}),n=Object.assign(Object.assign({},n),{name:A}),o.set(A,n)}return e.setPos(h),f=a,f}))}(e,s,c,0,a)}return u}))}function d(t,n){const r=t.split(""),e=t.lastIndexOf(".");return r.splice(e,4),r.join("")+"_"+n}function b(t,n,r){const e=Array.from({length:r},(()=>0));for(let n=0;n<r;n++)e[n]=t.getUint16();for(let o=0;o<r;o++)for(let r=0;r<e[o]&&!t.atEnd();){let e=t.getUint8();if(r++,e>=128&&(e-=256),e<0){if(-128==e)continue;e=1-e;const o=t.getUint8();if(t.atEnd())break;r++;for(let t=0;t<e;t++)n.push(o)}else for(let o=0;o<e+1;o++,r++){const r=t.getUint8();if(n.push(r),t.atEnd())break}}return 0}function w(t,n,r){const e=document.createElement("canvas");e.width=n,e.height=r;const o=e.getContext("2d");if(!o)throw new Error("Failed to construct context.");const i=o.getImageData(0,0,n,r);let s=0,c=0;for(let e=0;e<r;e++)for(let r=0;r<n;r++,s++){c=255-t[s];for(let t=0;t<3;t++)i.data[e*n*4+4*r+t]=c;i.data[e*n*4+4*r+3]=255}return o.putImageData(i,0,0),e}export{r as INT16_MAX,o as abrBrushes,f as abrReach8BimSection,u as abrReadContent,a as abrSupportedContent,h as charCodeComparison,l as loadAbrBrush,s as loadAbrBrushes,c as loadAbrFromArrayBuffer};
//# sourceMappingURL=abr.esm.js.map
